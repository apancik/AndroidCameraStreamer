// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapacket.proto

#ifndef PROTOBUF_datapacket_2eproto__INCLUDED
#define PROTOBUF_datapacket_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace camerastreamer {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_datapacket_2eproto();
void protobuf_AssignDesc_datapacket_2eproto();
void protobuf_ShutdownFile_datapacket_2eproto();

class Header;
class PointData;

// ===================================================================

class Header : public ::google::protobuf::Message {
 public:
  Header();
  virtual ~Header();
  
  Header(const Header& from);
  
  inline Header& operator=(const Header& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Header& default_instance();
  
  void Swap(Header* other);
  
  // implements Message ----------------------------------------------
  
  Header* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Header& from);
  void MergeFrom(const Header& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 timestamp = 1;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  inline ::google::protobuf::int64 timestamp() const;
  inline void set_timestamp(::google::protobuf::int64 value);
  
  // optional float acc0 = 2;
  inline bool has_acc0() const;
  inline void clear_acc0();
  static const int kAcc0FieldNumber = 2;
  inline float acc0() const;
  inline void set_acc0(float value);
  
  // optional float acc1 = 3;
  inline bool has_acc1() const;
  inline void clear_acc1();
  static const int kAcc1FieldNumber = 3;
  inline float acc1() const;
  inline void set_acc1(float value);
  
  // optional float acc2 = 4;
  inline bool has_acc2() const;
  inline void clear_acc2();
  static const int kAcc2FieldNumber = 4;
  inline float acc2() const;
  inline void set_acc2(float value);
  
  // optional double longitude = 5;
  inline bool has_longitude() const;
  inline void clear_longitude();
  static const int kLongitudeFieldNumber = 5;
  inline double longitude() const;
  inline void set_longitude(double value);
  
  // optional double latitude = 6;
  inline bool has_latitude() const;
  inline void clear_latitude();
  static const int kLatitudeFieldNumber = 6;
  inline double latitude() const;
  inline void set_latitude(double value);
  
  // repeated .camerastreamer.PointData feature = 7;
  inline int feature_size() const;
  inline void clear_feature();
  static const int kFeatureFieldNumber = 7;
  inline const ::camerastreamer::PointData& feature(int index) const;
  inline ::camerastreamer::PointData* mutable_feature(int index);
  inline ::camerastreamer::PointData* add_feature();
  inline const ::google::protobuf::RepeatedPtrField< ::camerastreamer::PointData >&
      feature() const;
  inline ::google::protobuf::RepeatedPtrField< ::camerastreamer::PointData >*
      mutable_feature();
  
  // @@protoc_insertion_point(class_scope:camerastreamer.Header)
 private:
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_acc0();
  inline void clear_has_acc0();
  inline void set_has_acc1();
  inline void clear_has_acc1();
  inline void set_has_acc2();
  inline void clear_has_acc2();
  inline void set_has_longitude();
  inline void clear_has_longitude();
  inline void set_has_latitude();
  inline void clear_has_latitude();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 timestamp_;
  float acc0_;
  float acc1_;
  double longitude_;
  double latitude_;
  ::google::protobuf::RepeatedPtrField< ::camerastreamer::PointData > feature_;
  float acc2_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_datapacket_2eproto();
  friend void protobuf_AssignDesc_datapacket_2eproto();
  friend void protobuf_ShutdownFile_datapacket_2eproto();
  
  void InitAsDefaultInstance();
  static Header* default_instance_;
};
// -------------------------------------------------------------------

class PointData : public ::google::protobuf::Message {
 public:
  PointData();
  virtual ~PointData();
  
  PointData(const PointData& from);
  
  inline PointData& operator=(const PointData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PointData& default_instance();
  
  void Swap(PointData* other);
  
  // implements Message ----------------------------------------------
  
  PointData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PointData& from);
  void MergeFrom(const PointData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required double x = 8;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 8;
  inline double x() const;
  inline void set_x(double value);
  
  // required double y = 9;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 9;
  inline double y() const;
  inline void set_y(double value);
  
  // @@protoc_insertion_point(class_scope:camerastreamer.PointData)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  double x_;
  double y_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_datapacket_2eproto();
  friend void protobuf_AssignDesc_datapacket_2eproto();
  friend void protobuf_ShutdownFile_datapacket_2eproto();
  
  void InitAsDefaultInstance();
  static PointData* default_instance_;
};
// ===================================================================


// ===================================================================

// Header

// optional int64 timestamp = 1;
inline bool Header::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Header::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Header::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Header::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 Header::timestamp() const {
  return timestamp_;
}
inline void Header::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// optional float acc0 = 2;
inline bool Header::has_acc0() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Header::set_has_acc0() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Header::clear_has_acc0() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Header::clear_acc0() {
  acc0_ = 0;
  clear_has_acc0();
}
inline float Header::acc0() const {
  return acc0_;
}
inline void Header::set_acc0(float value) {
  set_has_acc0();
  acc0_ = value;
}

// optional float acc1 = 3;
inline bool Header::has_acc1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Header::set_has_acc1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Header::clear_has_acc1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Header::clear_acc1() {
  acc1_ = 0;
  clear_has_acc1();
}
inline float Header::acc1() const {
  return acc1_;
}
inline void Header::set_acc1(float value) {
  set_has_acc1();
  acc1_ = value;
}

// optional float acc2 = 4;
inline bool Header::has_acc2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Header::set_has_acc2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Header::clear_has_acc2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Header::clear_acc2() {
  acc2_ = 0;
  clear_has_acc2();
}
inline float Header::acc2() const {
  return acc2_;
}
inline void Header::set_acc2(float value) {
  set_has_acc2();
  acc2_ = value;
}

// optional double longitude = 5;
inline bool Header::has_longitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Header::set_has_longitude() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Header::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Header::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline double Header::longitude() const {
  return longitude_;
}
inline void Header::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
}

// optional double latitude = 6;
inline bool Header::has_latitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Header::set_has_latitude() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Header::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Header::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline double Header::latitude() const {
  return latitude_;
}
inline void Header::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
}

// repeated .camerastreamer.PointData feature = 7;
inline int Header::feature_size() const {
  return feature_.size();
}
inline void Header::clear_feature() {
  feature_.Clear();
}
inline const ::camerastreamer::PointData& Header::feature(int index) const {
  return feature_.Get(index);
}
inline ::camerastreamer::PointData* Header::mutable_feature(int index) {
  return feature_.Mutable(index);
}
inline ::camerastreamer::PointData* Header::add_feature() {
  return feature_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::camerastreamer::PointData >&
Header::feature() const {
  return feature_;
}
inline ::google::protobuf::RepeatedPtrField< ::camerastreamer::PointData >*
Header::mutable_feature() {
  return &feature_;
}

// -------------------------------------------------------------------

// PointData

// required double x = 8;
inline bool PointData::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PointData::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PointData::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PointData::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline double PointData::x() const {
  return x_;
}
inline void PointData::set_x(double value) {
  set_has_x();
  x_ = value;
}

// required double y = 9;
inline bool PointData::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PointData::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PointData::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PointData::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline double PointData::y() const {
  return y_;
}
inline void PointData::set_y(double value) {
  set_has_y();
  y_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace camerastreamer

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_datapacket_2eproto__INCLUDED
